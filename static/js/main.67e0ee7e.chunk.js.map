{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","style","winningSquare","backgroundColor","value","Board","i","this","winner","includes","squares","boardSquares","row","boardRow","col","push","renderSquare","React","Component","Game","state","history","Array","fill","clickedSquare","stepNumber","xIsNext","ascending","slice","length","calculateWinner","setState","concat","Math","floor","step","status","active","fontWeight","inactive","current","moves","map","move","desc","href","jumpTo","handleClick","winningSquares","reverse","sortHandleClick","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.67e0ee7e.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nfunction Square(props){\r\n  const winningSquareStyle = {\r\n    backgroundColor: '#ccc'\r\n  };\r\n\r\n  return (\r\n    <button className=\"square\" onClick={props.onClick} style={props.winningSquare ? winningSquareStyle : null}>\r\n      {props.value}\r\n    </button>\r\n  );\r\n}\r\n\r\nclass Board extends React.Component {\r\n  renderSquare(i) {\r\n    let winningSquare = this.props.winner && this.props.winner.includes(i) ? true : false;\r\n    return (\r\n      <Square\r\n       value={this.props.squares[i]}\r\n       onClick={() => this.props.onClick(i)}\r\n       winningSquare = {winningSquare}\r\n      />\r\n    );\r\n  }\r\n\r\n  render() {\r\n    let boardSquares = [];\r\n    for(let row = 0; row < 3; row++){\r\n      let boardRow = [];\r\n      for(let col = 0; col < 3; col++){\r\n        boardRow.push(<span key={(row * 3) + col}>{this.renderSquare((row * 3) + col)}</span>);\r\n      }\r\n      boardSquares.push(<div className=\"board-row\" key={row}>{boardRow}</div>);\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        {boardSquares}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Game extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      history: [{\r\n        squares: Array(9).fill(null),\r\n        clickedSquare: [0,0],\r\n      }],\r\n      stepNumber: 0,\r\n      xIsNext: true,\r\n      ascending: true\r\n    };\r\n  }\r\n\r\n  handleClick(i) {\r\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n    const current = history[history.length - 1];\r\n    const squares = current.squares.slice();\r\n    if (calculateWinner(squares) || squares[i]) {\r\n      return;\r\n    }\r\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n    this.setState({\r\n      history: history.concat([{\r\n        squares: squares,\r\n        clickedSquare:[Math.floor((i % 3) + 1), Math.floor((i / 3) + 1)]\r\n      }]),\r\n      stepNumber: history.length,\r\n      xIsNext: !this.state.xIsNext,\r\n    });\r\n  }\r\n\r\n  jumpTo(step) {\r\n    this.setState({\r\n      stepNumber: step,\r\n      xIsNext: (step % 2) === 0\r\n    });\r\n  }\r\n\r\n  sortHandleClick(){\r\n    this.setState({\r\n      ascending: !this.state.ascending\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const active = {\r\n      fontWeight: 'bold'\r\n    };\r\n\r\n    const inactive = {\r\n      fontWeight: 'normal'\r\n    };\r\n\r\n    const history = this.state.history;\r\n    const current = history[this.state.stepNumber];\r\n    const winner = calculateWinner(current.squares);\r\n    const ascending = this.state.ascending;\r\n\r\n    \r\n    const moves = history.map((step, move) => {\r\n      const clickedSquare = step.clickedSquare;\r\n      const desc = move ?\r\n        `Move #  ${move} - (${clickedSquare[0]},${clickedSquare[1]})`:\r\n        `Game start`;\r\n\r\n      return (\r\n        <li key={move}>\r\n          <a href=\"#\" style={this.state.stepNumber === move ? active : inactive} onClick={() => this.jumpTo(move)}>{desc}</a>\r\n        </li>\r\n      );\r\n    });\r\n\r\n    let status;\r\n    if (winner) {\r\n      status = 'Winner: ' + winner.winner;\r\n    } else {\r\n        if (this.state.stepNumber===9){\r\n            status = 'There is no winner';\r\n        }\r\n        else{\r\n            status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\r\n        }\r\n    }\r\n\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game-board\">\r\n          <Board\r\n            squares={current.squares}\r\n            onClick={(i) => this.handleClick(i)}\r\n            winner={winner && winner.winningSquares}\r\n          />\r\n        </div>\r\n        <div className=\"game-info\">\r\n          <div>{status}</div>\r\n          <ol>{ascending ? moves : moves.reverse()}</ol>\r\n          <button onClick={() => this.sortHandleClick()}>Sort</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// ========================================\r\n\r\nReactDOM.render(\r\n  <Game />,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\nfunction calculateWinner(squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return {\r\n        winner: squares[a],\r\n        winningSquares: lines[i]\r\n      };\r\n    }\r\n  }\r\n  return null;\r\n}"],"sourceRoot":""}